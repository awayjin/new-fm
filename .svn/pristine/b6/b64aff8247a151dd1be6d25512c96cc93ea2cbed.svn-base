<template>

  <div  v-infinite-scroll="loadMore()" infinite-scroll-disabled="busyOrLast" infinite-scroll-distance="10" infinite-scroll-immediate-check="false">
    busyOrLast: {{ busyOrLast }}

    <slot></slot>
    <!--<div class="loading-wrap" v-show="busy"><span class="loading"></span>加载中...</div>
    <div class="loading-wrap last-none" v-show="isTheLastPage">已加载全部数据</div>-->

    <div class="loading-wrap" v-show="busy"><span class="loading"></span>加载中...</div>
    <div class="loading-wrap last-none" v-show="isTheLastPage">--我是有底线的！--</div>

  </div>

</template>

<script>
  import infiniteScroll from 'vue-infinite-scroll'
  export default {
    props: [
      'busy',
      'isTheLastPage',
      'nextPageEvent'
    ],
//    props: {
//      // 判断是否最后一页
//      isTheLastPage: {
//        type: Boolean,
//        default: false
//      },
//      // 判断是否处于繁忙状态
//      busy: {
//        type: Boolean,
//        default: false
//      },
//      // 执行加载下一页的事件
//      nextPageEvent: {
//        type: String,
//        default: 'go-to-next-page'
//      }
//    },
    directives: { infiniteScroll },
    data () {
      return {
        isBusy: false
      }
    },
    computed: {
      busyOrLast: {
        get: function () {
          return this.isBusy || this.busy || this.isTheLastPage
        },
        set: function (newValue) {
          this.busy = newValue
        }
      }

    },
    methods: {
      loadMore: function () {
        // （当前组件与父组件）置于繁忙状态
        this.busyOrLast = true
        // 传递“加载下一页“事件给父组件
//        this.$dispatch(this.nextPageEvent)
        this.$emit('next-page-event')
      }
    }
  }
</script>
